{"type": "Ryven nodes package", "nodes": [{"title": "VarianceThreshold", "description": "Feature selector that removes all low-variance features.\nThis feature selection algorithm looks only at the features (X), not the desired outputs (y), and can thus be used for unsupervised learning.", "type": "", "module name": "feature_selection___VarianceThreshold0", "class name": "VarianceThreshold", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "threshold", "has widget": true, "widget name": "std line edit m", "widget position": "besides"}, {"type": "data", "label": "X", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "self"}, {"type": "data", "label": "variances_"}]}, {"title": "get_support", "description": "", "type": "", "module name": "feature_selection___Get_Support0", "class name": "Get_Support", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "selector", "has widget": false}, {"type": "data", "label": "indices", "has widget": true, "widget name": "std line edit m", "widget position": "besides"}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "support"}]}, {"title": "VT sample", "description": "", "type": "", "module name": "feature_selection___VTSample0", "class name": "VTSample", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [], "outputs": [{"type": "data", "label": "X"}]}, {"title": "RFE", "description": "Feature ranking with recursive feature elimination.\nGiven an external estimator that assigns weights to features (e.g., the coefficients of a linear model), the goal of recursive feature elimination (RFE) is to select features by recursively considering smaller and smaller sets of features. First, the estimator is trained on the initial set of features and the importance of each feature is obtained either through any specific attribute or callable. Then, the least important features are pruned from current set of features. That procedure is recursively repeated on the pruned set until the desired number of features to select is eventually reached.", "type": "", "module name": "feature_selection___RFE0", "class name": "RFE", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "params", "has widget": false}, {"type": "data", "label": "estimator", "has widget": false}, {"type": "data", "label": "X", "has widget": false}, {"type": "data", "label": "y", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "self"}]}]}