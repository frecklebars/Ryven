{"type": "Ryven nodes package", "nodes": [{"title": "Random Forest Classifier", "description": "A random forest classifier.\nA random forest is a meta estimator that fits a number of decision tree classifiers on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting. The sub-sample size is controlled with the max_samples parameter if bootstrap=True (default), otherwise the whole dataset is used to build each tree.", "type": "", "module name": "ensemble___RandomForestClassifier0", "class name": "RandomForestClassifier", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "params", "has widget": false}, {"type": "data", "label": "X", "has widget": false}, {"type": "data", "label": "y", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "self"}]}, {"title": "RF sample X y", "description": "", "type": "", "module name": "ensemble___RFSampleXY0", "class name": "RFSampleXY", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [], "outputs": [{"type": "data", "label": "classifier X"}, {"type": "data", "label": "classifier y"}, {"type": "data", "label": "regressor X"}, {"type": "data", "label": "regressor y"}]}, {"title": "Random Forest Regressor", "description": "A random forest regressor.\nA random forest is a meta estimator that fits a number of classifying decision trees on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting. The sub-sample size is controlled with the max_samples parameter if bootstrap=True (default), otherwise the whole dataset is used to build each tree.", "type": "", "module name": "ensemble___RandomForestRegressor0", "class name": "RandomForestRegressor", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "params", "has widget": false}, {"type": "data", "label": "X", "has widget": false}, {"type": "data", "label": "y", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "self"}]}, {"title": "apply", "description": "Apply trees in the forest to X, return leaf indices.", "type": "", "module name": "ensemble___Apply0", "class name": "Apply", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "X_leaves"}]}, {"title": "decision_path", "description": "Return the decision path in the forest.\nReturns a node indicator matrix where non zero elements indicates that the samples goes through the nodes and the columns from indicator[n_nodes_ptr[i]:n_nodes_ptr[i+1]] gives the indicator value for the i-th estimator. The matrix is of CSR format.", "type": "", "module name": "ensemble___Decision_Path0", "class name": "Decision_Path", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "indicator"}, {"type": "data", "label": "n_nodes_ptr"}]}]}