{"type": "Ryven nodes package", "nodes": [{"title": "Linear Regression", "description": "Ordinary least squares Linear Regression.\nLinearRegression fits a linear model with coefficients w = (w1, \u2026, wp) to minimize the residual sum of squares between the observed targets in the dataset, and the targets predicted by the linear approximation.\nRequires X, training data, and y, target values, to fit the linear model.", "type": "", "module name": "LinearRegression___LinearRegression0", "class name": "LinearRegression", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "params", "has widget": false}, {"type": "data", "label": "X", "has widget": false}, {"type": "data", "label": "y", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "self"}]}, {"title": "Linear Regression sample X y", "description": "Sample X y", "type": "", "module name": "LinearRegression___LinearRegressionSampleXy0", "class name": "LinearRegressionSampleXy", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [], "outputs": [{"type": "data", "label": "X"}, {"type": "data", "label": "y"}]}, {"title": "Linear Regression predict", "description": "Predict using the linear model.", "type": "", "module name": "LinearRegression___LinearRegressionPredict0", "class name": "LinearRegressionPredict", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": true, "widget name": "std line edit m", "widget position": "besides"}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "C"}]}, {"title": "Linear Regression score", "description": "Return the coefficient of determination R^2 of the prediction.\n\nThe coefficient R^2 is defined as (1 - u/v), where u is the residual sum of squares ((y_true - y_pred) ** 2).sum() and v is the total sum of squares ((y_true - y_true.mean()) ** 2).sum(). The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of y, disregarding the input features, would get a R^2 score of 0.0.\n", "type": "", "module name": "LinearRegression___LinearRegressionScore0", "class name": "LinearRegressionScore", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": false}, {"type": "data", "label": "y", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "score"}]}]}