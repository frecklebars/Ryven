{"type": "Ryven nodes package", "nodes": [{"title": "Random Forest Classifier", "description": "A random forest classifier.\nA random forest is a meta estimator that fits a number of decision tree classifiers on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting. The sub-sample size is controlled with the max_samples parameter if bootstrap=True (default), otherwise the whole dataset is used to build each tree.", "type": "", "module name": "Random Forest___RandomForestClassifier0", "class name": "RandomForestClassifier", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "params", "has widget": false}, {"type": "data", "label": "X", "has widget": false}, {"type": "data", "label": "y", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "self"}]}, {"title": "RandomForest sample X y", "description": "", "type": "", "module name": "Random Forest___RandomForestSampleXY0", "class name": "RandomForestSampleXY", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [], "outputs": [{"type": "data", "label": "classifier X"}, {"type": "data", "label": "classifier y"}, {"type": "data", "label": "regressor X"}, {"type": "data", "label": "regressor y"}]}, {"title": "Random Forest Regressor", "description": "A random forest regressor.\nA random forest is a meta estimator that fits a number of classifying decision trees on various sub-samples of the dataset and uses averaging to improve the predictive accuracy and control over-fitting. The sub-sample size is controlled with the max_samples parameter if bootstrap=True (default), otherwise the whole dataset is used to build each tree.", "type": "", "module name": "Random Forest___RandomForestRegressor0", "class name": "RandomForestRegressor", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "params", "has widget": false}, {"type": "data", "label": "X", "has widget": false}, {"type": "data", "label": "y", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "self"}]}, {"title": "RF apply", "description": "Apply trees in the forest to X, return leaf indices.", "type": "", "module name": "Random Forest___RFApply0", "class name": "RFApply", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "X_leaves"}]}, {"title": "RF decision_path", "description": "Return the decision path in the forest.\nReturns a node indicator matrix where non zero elements indicates that the samples goes through the nodes and the columns from indicator[n_nodes_ptr[i]:n_nodes_ptr[i+1]] gives the indicator value for the i-th estimator. The matrix is of CSR format.", "type": "", "module name": "Random Forest___RFDecision_Path0", "class name": "RFDecision_Path", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "indicator"}, {"type": "data", "label": "n_nodes_ptr"}]}, {"title": "RF predict", "description": "Predict class or regression target for X.\nThe predicted class of an input sample is a vote by the trees in the forest, weighted by their probability estimates. That is, the predicted class is the one with highest mean probability estimate across the trees.\nThe predicted regression target of an input sample is computed as the mean predicted regression targets of the trees in the forest.", "type": "", "module name": "Random Forest___RFPredict0", "class name": "RFPredict", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": true, "widget name": "std line edit m", "widget position": "besides"}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "y"}]}, {"title": "RFC predict_log_proba", "description": "Predict class log-probabilities for X.\nThe predicted class log-probabilities of an input sample is computed as the log of the mean predicted class probabilities of the trees in the forest.", "type": "", "module name": "Random Forest___RFCPredict_Log_Proba0", "class name": "RFCPredict_Log_Proba", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "p"}]}, {"title": "RFC predict_proba", "description": "Predict class probabilities for X.\nThe predicted class probabilities of an input sample are computed as the mean predicted class probabilities of the trees in the forest. The class probability of a single tree is the fraction of samples of the same class in a leaf.", "type": "", "module name": "Random Forest___RFCPredict_Proba0", "class name": "RFCPredict_Proba", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "p"}]}, {"title": "RF score", "description": "If used with Classifier:\nReturn the mean accuracy on the given test data and labels.\nIn multi-label classification, this is the subset accuracy which is a harsh metric since you require for each sample that each label set be correctly predicted.\nIf used with Regressor:\nReturn the coefficient of determination R^2 of the prediction.\nThe coefficient R^2 is defined as (1 - u/v), where u is the residual sum of squares ((y_true - y_pred) ** 2).sum() and v is the total sum of squares ((y_true - y_true.mean()) ** 2).sum(). The best possible score is 1.0 and it can be negative (because the model can be arbitrarily worse). A constant model that always predicts the expected value of y, disregarding the input features, would get a R^2 score of 0.0.", "type": "", "module name": "Random Forest___RFScore0", "class name": "RFScore", "design style": "extended", "color": "#f7931e", "has main widget": false, "custom input widgets": [], "inputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "model", "has widget": false}, {"type": "data", "label": "X", "has widget": false}, {"type": "data", "label": "y", "has widget": false}], "outputs": [{"type": "exec", "label": ""}, {"type": "data", "label": "score"}]}]}